{"version":3,"file":"static/js/948.6325c8bb.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","Redux/contacts/selectors.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Phonebook.module.css?cbd2","pages/Phonebook.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label__name\":\"Form_label__name__R71ma\",\"label__number\":\"Form_label__number__c7ADP\",\"input__name\":\"Form_input__name__nxZj8\",\"input__number\":\"Form_input__number__wM94Z\",\"btn__add\":\"Form_btn__add__Ch0bQ\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport css from '../Form/Form.module.css';\nimport { addContact } from 'Redux/contacts/operations';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = evt => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    dispatch(addContact({ name, number, id: nanoid() }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label htmlFor={nanoid()} className={css.label__name}>\n        Name\n        <input\n          className={css.input__name}\n          onChange={handleInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor={nanoid()} className={css.label__number}>\n        Phone\n        <input\n          className={css.input__number}\n          onChange={handleInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={css.btn__add}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contacts__name\":\"ContactList_contacts__name__ItpdU\",\"contacts__number\":\"ContactList_contacts__number__+j+yn\",\"contacts__item\":\"ContactList_contacts__item__9ozWV\",\"delete__btn\":\"ContactList_delete__btn__fLhJv\"};","export const getContacts = state => state.rootReducer.contacts;\n\nexport const getStatusFilter = state => state.rootReducer.filters;\n\nexport const getIsLoading = state => state.isLoading;\n\nexport const getError = state => state.error;\n","import css from '../ContactList/ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getError, getIsLoading } from 'Redux/contacts/selectors';\nimport { getStatusFilter } from 'Redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'Redux/contacts/operations';\nimport { fetchContacts } from 'Redux/contacts/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n\n  const filters = useSelector(getStatusFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const contactsArray = contacts.items;\n\n  const getVisibleContacts = () => {\n    // console.log(isLoading);\n    if (filters !== '') {\n      return contactsArray.filter(contact =>\n        contact.name.toLowerCase().includes(filters.toLowerCase())\n      );\n    }\n    return contactsArray;\n  };\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = evt => {\n    dispatch(deleteContact(evt));\n  };\n  const visibleContacts = getVisibleContacts(contactsArray, filters);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.contactList}>\n      {isLoading && !error && <p>Request in progress...</p>}\n      {visibleContacts.map(({ name, number, id }) => (\n        <li className={css.contacts__item} key={id}>\n          <p className={css.contacts__name}>{name}</p>\n          <p className={css.contacts__number}>{number}</p>\n          <button\n            type=\"button\"\n            className={css.delete__btn}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label__filter\":\"Filter_label__filter__MTKLE\",\"input__filter\":\"Filter_input__filter__-CCAg\"};","import css from '../Filter/Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'Redux/contacts/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    dispatch(setStatusFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <label htmlFor=\"\" className={css.label__filter}>\n      Find contacts by name\n      <input type=\"text\" onChange={onChange} className={css.input__filter} />\n    </label>\n  );\n};\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__1anZw\"};","import Form from 'components/Form/Form';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport css from './Phonebook.module.css';\n\nexport default function Phonebook() {\n  return (\n    <div className={css.container}>\n      <h1 className={css.titlePhonebook}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={css.contactList}>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Form","useState","name","setName","number","setNumber","handleInput","evt","currentTarget","value","dispatch","useDispatch","onSubmit","preventDefault","addContact","className","css","htmlFor","onChange","type","pattern","title","required","getContacts","state","rootReducer","contacts","getStatusFilter","filters","getIsLoading","isLoading","getError","error","useSelector","contactsArray","items","visibleContacts","filter","contact","toLowerCase","includes","useEffect","fetchContacts","map","onClick","deleteContact","Filter","setStatusFilter","prototype","PropTypes","Phonebook","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}